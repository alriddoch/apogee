2002-02-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Isometric.h, visual/Isometric.cpp,
	  visual/DemeterScene.h, app/apogee.cpp, app/IsoClient.h,
	  app/IsoClient.cpp, app/Application.h:
	  Added mechanism for time to be passed around subsystems, to
	  be used to update animations etc. Implemented measuring time
	  using SDL, and used it to animate cal3d models more correctly.

2002-02-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TileMap.h, visual/TileMap.cpp,
	  visual/HeightMap.h, visual/HeightMap.cpp:
	  TileMap and HeightMap classes added for more efficiently managing
	  maps of tile, and height data.

	* app/GameClient.cpp, app/IsoClient.h: Add a height map to the
	  test app.

	* visual/DemeterScene.cpp, visual/DemeterScene.h, visual/Isometric.cpp,
	  visual/Isometric.h, visual/Renderer.h:
	  Add support for height map to renderer interface.

	* visual/Tile.cpp: Tweak debugging output.

	* visual/Isometric.cpp, visual/Isometric.h: Implement conversion
	  of coal stored map into more efficient tile map, and render only
	  small area surrounding player.

2002-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.h: Updates for cal3d 0.7

2002-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Strict gcc3 C++ compliance fixes.

2002-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/WorldEntity.cpp,
	  app/WorldEntity.h: Updated for latest Eris API.

2001-12-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Tile.h, visual/Tile.cpp:
	  Add class to handle isometric tiles as GL textures.

	* app/IsoClient.cpp, app/IsoClient.h, visual/Isometric.cpp:
	  Add isomap rendering code, and switch to using it by default.

2001-12-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Slow down character movement to walking pace.

	* app/IxClient.cpp, visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h, visual/Renderer.h:
	  Add support for rotation quaternion to model drawing function.

	* visual/Isometric.cpp: Remove deugging output.

	* common/Vector3D.h: Fixed error in cross product calculation.

	* visual/Model.cpp: Disable linear texture for speed on software
	  rendering.

2001-12-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.h, visual/Isometric.cpp, visual/Isometric.h:
	  Fix movement prediction so it works in fracitons of a second.

	* app/GameClient.cpp, app/GameClient.h: Add movement prediction to
	  the camera control.

	* visual/Isometric.cpp, visual/DemeterScene.cpp: Fix up media
	  pathnames.

2001-12-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.cpp, app/WorldEntity.h: Added code to manage a
	  movement time stamp.

	* visual/Isometric.cpp, visual/Isometric.h: Added very simple movement
	  prediction, extrapolating from time of last update from server.

2001-12-10  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp: Properrly fixed button press detection.

	* visual/Isometric.cpp, visual/Isometric.h: Added test of Eris
	  typeinfo system, checking if each entity inherits from character,
	  and if so, using a character animation rather than a bbox.

2001-12-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Brought perigee up to date with the bbox format

	* app/IsoClient.cpp: Cleaned up button click processing.

	* app/apogee.cpp: Make view update continuously.

	* visual/Isometric.cpp: Cut down the excess debugging output, and
	  add SDL timer support for the refresh delay.

2001-12-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h:
	  Added support for moving the character, and getting the
	  coords of the character relative to the current top level entity.

	* app/IsoClient.cpp, app/IsoClient.h:
	  Remove support for models. Set renderer offset according to
	  character position. Move character to position when user clicks
	  on terrain.

	* gui/Gui.cpp: Correct initialisation of modelview, and move
	  gui closer to the user.

	* visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h, visual/Renderer.cpp,
	  visual/Renderer.h: Switch to using new Eris bouding box, and use
	  depth buffer when drawing Isometric terrain, so that coords of
	  click point can be found.

2001-11-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/IxClient.cpp, visual/Isometric.cpp:
	  Fixes for modified Eris API.

2001-11-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/apogee.cpp,
	  app/perigee.cpp: Updated to handle latest Eris logging features.

2001-11-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Updated account creation for new Eris API.

2001-11-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h: Added new local Entity class
	  which inherits from Eris::Entity, and tell Eris to use it.

	* app/IsoClient.cpp: Remove old gui widgets, which are not clienty.

	* app/IsoClient.cpp: Switch to rendering world in the renderer
	  instead of in the app.

	* common/Vector3D.h: Add more operators.

	* visual/Renderer.h, visual/DemeterScene.h, visual/Isometric.h,
	  visual/Isometric.cpp:
	  Add code to render hierarchy of Atlas entities as the world.

	* visual/Isometric.cpp: Fix scaling code so it now uses propper
	  OpenGL scale function.

2001-10-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/IsoClient.cpp:
	  Turn on Eris logging, and add a flag which is set when
	  we get the Entered signal.

2001-10-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Alert.cpp, gui/Alert.h, gui/Button.cpp, gui/Button.h,
	  gui/Compass.cpp, gui/Compass.h, gui/Dialogue.cpp, gui/Dialogue.h,
	  gui/Gui.cpp, gui/Gui.h, gui/Item.cpp, gui/Item.h,
	  gui/TextField.cpp, gui/TextField.h, Widget.h:
	  Modified key() method so it takes mod info as well as key pressed.
	  Added variables to track which widget has focus. Added static
	  method to convert SDL keypress info to ascii value. Implemented
	  text editing in TextField and Dialogue.

2001-10-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* configure.in: Patched in correct sigc++ check by James.

2001-10-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Compass.h, gui/Compass.cpp: Added compass gui widget.

	* gui/Button.h, gui/Button.cpp: Fixed accidentally overloaded
	  release() method.

	* app/IsoClient.h, app/IsoClient.cpp: Added compass widget to
	  IsoClient gui.

	* app/GameClient.cpp: Added alert boxes for connection error
	  conditions.

	* Added copyright messages to all files.

2001-09-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp, visual/DemeterScene.cpp: Switched depth
	  function to LEQUAL for gui text.

	* visual/DemeterScene.cpp: Corrected value of pi. Thanks anubis.

	* gui/Widget.h, gui/Widget.cpp, gui/Item.h, gui/Item.cpp: Added
	  release() method to widget for when the mouse click is released,
	  and key() for keypresses.  Added virtual destructor to base class.

	* gui/Gui.h, gui/Gui.cpp: Added addWidget() so application class
	  can use the gui. Added handling of keypresses and passing them
	  to widgets. Modified semantics of click() and added release()
	  when dealing with button clicks. Removed the test Widgets.

	* gui/Button.h, gui/Button.cpp: Added press() and release() methods
	  to switch between normal graphic and pressed graphic. Added width()
	  method to query the pixel width.

	* gui/Alert.h, gui/Alert.cpp: Modified so it no longer inherits from
	  Item, and move graphic handling to a static member so the
	  background graphic is only loaded once.

	* gui/Dialogue.h, gui/Dialogue.cpp: New simple dialogue with two
	  buttons, and up to two textfields.

	* gui/TextField.h, gui/TextField.cpp: New textfield widget used
	  by dialogue for entering text. Currently non-interactive.

	* app/perigee.cpp, app/apogee.cpp: Removed the need for arguments.

	* app/GameClient.h, app/GameClient.cpp: Added common base class for
	  all clients which are used for playing games. Implements logging
	  on and some IG and OOG server interaction. Removed all the common
	  functionality from IsoClient and IxClient and placed in this
	  class. Add features to use gui Dialogue to get player interaction
	  during logon.

	* app/Application.h, app/Application.cpp: Moved connection handling
	  into the application base class.

	* app/IxClient.cpp, app/IsoClient.cpp: Add server connection dialogue
	  to gui on startup.

2001-09-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Button.cpp, gui/Button.h: Added new button widget.

	* gui/Widget.h, gui/Widget.cpp: Added obsolete and visible flags
	  so widgets can be hidden or removed. Make move function virtual.
	  Added click virtual method to transmit mouse clicks to widgets.

	* gui/Item.h, gui/Item.cpp: Implemented click() to do nothing.

	* gui/Gui.h: Added list for storing select hits, and accessor methods.

	* gui/Gui.cpp: Made sure print() does not mess up the cursor position.
	  Added handling of mouse release. Store all select hits in the hit
	  list. Implement hiding of non-visible widgets, and removal of
	  obsolete widgets. Make sure all widgets are setup() correctly.

	* gui/Alert.h, gui/Alert.cpp: Implement click to close the alert
	  when the button is pressed. Re-write select so it only draws the
	  important visual elements. Fully implement drawing of a propper
	  alert.

	* visual/DemeterScene.cpp: Set blend function correctly.

2001-09-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Alert.h, gui/Alert.cpp: New gui class for popup or alert
	  messages.

	* gui/Gui.cpp: Implemented print function for text in OpenGL.

	* gui/Gui.h: Made newName() public so that Widgets can get names
	  for their subwidgets.

	* gui/Widget.h: Made reference to gui object protected.

	* visual/Isometric.cpp: Set blend function, as text code in gui
	  needs a different one.

2001-09-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp, app/IxClient.cpp, gui/Gui.cpp, gui/Gui.h,
	  gui/Item.cpp, gui/Item.h: Place control over rendering gui
	  directly with the Gui class. Add widget map, which indexes
	  using OpenGL names, and fix passing events through to gui
	  code.

	* gui/Widget.h: Modified passing of Gui reference so it is stored
	  at initialisation. Add code for moving widget.

	* visual/DemeterScene.cpp, visual/Isometric.cpp: Removed old test
	  gui code.

	* gui/Gui.cpp: Added text drawing code. Added handling of mouse
	  drag events to move widgets around.

2001-09-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp, gui/Gui.h, gui/Widget.cpp, gui/Widget.h, gui/Item.cpp,
	  gui/Item.h: Make propper classes for gui, and implement bag item.

2001-09-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Switched perigee to using Gui class.

	* visual/DemeterScene.cpp: Enable blending for gui textures.
	  Temporarily turn off grabbing mouse cursor for debugging.

	* gui/Gui.cpp: Removed unrequired call to set up OpenGL names.

2001-09-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.h, app/IxClient.cpp, app/perigee.cpp:
	  Created new Client application class for perspective client.

	* app/perigee.cpp, app/IxClient.cpp: Moved handling of mouse
	  movement into an application method.

2001-09-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp, visual/DemeterScene.cpp: Grab mouse cursor, and
	  make mouse control view directly.

2001-09-19  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.h, gui/Gui.cpp, app/Application.h, app/IsoClient.cpp,
	  app/IsoClient.h, visual/Isometric.cpp: Added gui class for
	  handling opengl user interface code.

2001-09-18  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp: Renamed perspective version of the client perigee,
	  and create new build target for it.

	* app/IsoClient.h, app/IsoClient.cpp: Added new application class for
	  the isometric version of the client.

	* app/Editor.cpp: This is now the application class for perigee, the
	  perspective version of the client.

	* app/apogee.cpp: Switched back to isometric renderer, and moved
	  to using the new IsoClient application class.

	* visual/DemeterScene.cpp: Window title should be perigee for
	  perspective renderer.

	* visual/Isometric.cpp: Disabled smooth shading for performance while
	  developing. Added drawGui() method for isometric renderer, similar
	  to that for perspective.

	* visual/Sprite.cpp: Fixed sprite loading code, and adapted it so
	  it can be used for gui sprites as well as in game ones.

	* visual/Texture.cpp: Removed deliberate corruption of textures for
	  testing.

2001-09-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Removed old code from renderer base class.

	* visual/Renderer.h, visual/Isometric.h, visual/DemeterScene.h:
	  Added drawGui() pure virtual function.

	* visual/Model.cpp: Removed code which fiddles with the depth test,
	  as this is now controlled by the renderer class.

	* visual/DemeterScene.cpp: Added code to draw experimental gui
	  graphics. Added lighting setup code. Modified projection code
	  so the window can be resized. scale is tied to the windows
	  height.

	* app/Editor.cpp: Removed old calls to isometric related functions.

2001-09-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.cpp, visual/Model.h: Updated to latest versions from
	  the cally demo 2 to use cal3d 0.6.

	* app/Editor.cpp: Updated to latest demo data for cal3d.

2001-09-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Fixed cal3d model rendering so it is
	  drawn at the terrains surface.

2001-09-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Fixed camera to track terrains surface.

2001-09-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/Editor.cpp, visual/DemeterScene.cpp: Worked out how to scale
	  cally character rendering.

	* visual/DemeterScene.cpp, visual/DemeterScene.h: Added z_offset, and
	  sorted out correctly positioning character and map using the same
	  camera offsets.

2001-09-10  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Added new rendere class which renders a perspective projection,
	  and terrain using demeter.

	* Switched to using float instead of double to make GL code more
	  efficient.

2001-08-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Moved Vector3D into
	  common.

	* app/apogee.cpp, app/Editor.h, app/Editor.cpp, app/Client.h,
	  app/Application.h: Re-wrote client and entity code to use
	  Eris, the newly commited client library.

2001-07-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.h, visual/Model.cpp: Added model class from cal3d
	  demo app.

	* visual/Renderer.h, visual/Renderer.cpp, app/Editor.h, app/Editor.cpp:
	  Added code to draw an animated paladin model on the main view
	  using cal3d.

2001-07-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* net/Connection.h, net/Connection.cpp: Added Atlas connection
	  class, which connects to server and handles operations from
	  server.

	* world/World.h, world/World.cpp, world/Entity.h, world/Entity.cpp,
	  world/Vector3D.h: Added classes to store the state of the world.

	* Added support using new code for full connecting to the server,
	  and rendering server side entities as boxes.

	* Cleaned up and ISO'd the code.

2001-02-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Started work on the client side of apogee, and looked at
	  getting isometric loader from coal working.

2001-01-18  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* configure.in, autogen.sh: Switched to using atlas.m4 for detecting
	  Atlas, and using correct libxml macro.

2001-01-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Added ability to scroll round the map.

	* Added beginnings of lighting support, which does not yet
	  work it seems.

2001-01-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Fixed alpha blending in sprite code.

	* Added reset isometric projection key 0.
