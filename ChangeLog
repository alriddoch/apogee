2004-03-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/ServerSelector.cpp: Render servers as pretty coloured cubes.

2004-03-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp: Fix text colour now we use modulate rather than
	  replace.

	* visual/TerrainRenderer.cpp: Change to a new format for terrain
	  points, keeping compatability with the older format for now.

2004-03-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/ServerSelector.h, gui/ServerSelector.cpp: Add a new
	  widget to browse servers from the metaserver.

	* gui/CharSelector.cpp: Make array of positions static to avoid
	  a collision.

	* visual/Sprite.cpp, visual/Renderer.cpp: Make sure color is set
	  before drawing sprites, so texture replace isn't required.

	* app/GameClient.h, app/GameClient.cpp: Add the server selector
	  widget.

2004-02-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/system.cpp: Default to "." as the media path for windows

2004-02-15  Ron Steinke  <rsteinke@w-link.net>

	* configure.ac: GL test for mingw32, take 4.

2004-02-14  Ron Steinke  <rsteinke@w-link.net>

	* configure.ac: GL test for mingw32, take 3.

2004-02-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Remove obsolete old autoconf macros, and fix up a couple of things
	  in the main Makefile.am.

2004-02-10  Ron Steinke  <rsteinke@w-link.net>

	* configure.ac: GL test for mingw32, take 2.

2004-02-09  Ron Steinke  <rsteinke@w-link.net>

	* configure.ac: Modifed open GL test to also work on win32.

2004-02-08  Ron Steinke  <rsteinke@w-link.net>

	* configure.ac, acinclude.m4: Use new combined macro for libz, libpng,
	  SDL and SDL_image check that will also work under win32.

2004-02-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/ForestRenderer.cpp: Update use of forest to take account
	  of the fact that the forest is now a polygon.

2004-02-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Update to latest eris API.

2004-01-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.cpp: Restore the apropraite render state after
	  drawing.

2004-01-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Endian fix for texture formats. Should now
	  work right on OS-X.

2004-01-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Fix setting texture coordinate array
	  mode in skybox renderer.

2004-01-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Remove obsolete commented out code.

	* visual/DemeterScene.cpp: Make skybox coords const.

2004-01-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/apogee.cpp, app/perigee.cpp: Tweak required headers
	  due to changes in eris.

2004-01-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Remove use of obsolete Instantiate() method.

2004-01-19  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.cpp: Add Atlas include no longer pulled in by Eris
	  headers.

2004-01-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp, visual/Isometric.cpp, visual/Renderer.cpp:
	  Move one-off light init code into core renderer.

2004-01-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h, visual/EntityRenderer.h,
	  visual/EntityRenderer.cpp, visual/Cal3dRenderer.h,
	  visual/Cal3dRenderer.cpp, visual/3dsRenderer.h,
	  visual/3dsRenderer.cpp, app/WorldEntity.h: Tweak 
	  Renderer interface so it now holds a reference
	  to a RenderableEntity so we can avoid a bunch
	  of casting.

	* app/WorldEntity.cpp, visual/ForestRenderer.h,
	  visual/ForestRenderer.cpp: Modify forest renderer
	  so it now inherits from 3dsRenderer, and uses a 3ds model
	  for the trees. Fix up the z axis of trees by aligning to
	  forests parent.

2004-01-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/ForestRenderer.cpp, visual/ForestRenderer.h:
	  Implement a quick bbox based renderer to test out the
	  forest code.

	* visual/3dsRenderer.cpp: Disable the debug flag.

2004-01-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.h, visual/3dsRenderer.cpp: Fix 3ds renderer
	  so it handles models without texels, and add some of the per-node
	  transforms that seem to be needed for munin's boat.

	* Add boat model to config file.

2004-01-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.h, app/WorldEntity.cpp,
	  visual/Renderer.cpp, app/GameClient.cpp:
	  Modify interface to RenderableEntity to deal with entities
	  not constrained by the terrain.

2004-01-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/ForestRenderer.cpp, visual/ForestRenderer.h,
	  app/WorldEntity.cpp: Stub of new class for rendering
	  forests.

2004-01-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Verify populating height data
	  and surface data separatly.

2004-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.cpp: Disable random scaling for 3ds renderer.

	* visual/Renderer.cpp, visual/Renderer.h: Add functions to renderer
	  interface to turn on and off fogging.

	* visual/TerrainRenderer.cpp, visual/TerrainRenderer.h:
	  Pass Renderer reference to drawSea(), and make it use that
	  to disable lighting and fog.

2004-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Clean up texture loading error
	  reporting.

2004-01-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.h, app/WorldEntity.cpp: Update to latest code
	  developed in equator.

2003-12-31  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h: Add a load() method stub so this
	  class can be treated consistantly with the others.

	* app/WorldEntity.h, app/WorldEntity.cpp: Make type nodes
	  non-static, and use a factory for terrain instead of special
	  casing it.

2003-12-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp, visual/Isometric.cpp,
	  visual/DemeterScene.cpp: Get rid of application
	  reference in Renderer.

	* visual/Renderer.h, visual/Renderer.cpp, visual/Model.h,
	  visual/Model.cpp, visual/Cal3dRenderer.h,
	  visual/Cal3dRenderer.cpp: Rename Model to Cal3dModel.

	* app/WorldEntity.h, app/WorldEntity.cpp, app/GameClient.cpp:
	  Simplify factory interface so we can use the same code
	  in equator.

2003-12-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Test the glIsTexture() function.

	* Fix AC_CANONICAL_SYSTEM usage.

2003-12-08  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Move GL setup code so it is called each
	  time a new context might be set up.

2003-12-08  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Move fog initialisation to be with the
	  rest of the OpenGL init code.

2003-12-07  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp, visual/3dsRenderer.cpp: Add checks
	  for display lists to check whether they disapear with a change
	  in context.

2003-12-07  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.h, visual/Texture.cpp: Quickly intruduce concept
	  of Texture object in store, and add code to debug when and
	  where textures break when modifying the context.

2003-12-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp, visual/Texture.h: Type defs and type name
	  changes for clarity.

2003-12-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Change some variable to unsigned
	  to eliminate warnings.

	* gui/Button.cpp: Remove unused variable.

2003-12-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Make configure bail if cal3d is missing.

2003-12-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.cpp, visual/3dsRenderer.cpp, visual/Renderer.cpp:
	  Add <cassert> include as required.

	* visual/3dsRenderer.cpp, visual/3dsRenderer.h: Restructure compile
	  vs rendering code, and add support for rendering slightly broken
	  .3ds files that contain no nodes.

2003-12-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Make configure bail if SDL is missing.

2003-12-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Make configure bail if libraries are missing. Remove coal
	  from the dependencies.

2003-12-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.cpp: Use MIPMAPS for character textures.

	* visual/3dsRenderer.cpp: Now working using vertex arrays, is
	  much faster than it was.

2003-12-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.h, visual/3dsRenderer.cpp: Get rid of old
	  broken 3ds renderer, and add the features required to support
	  more advanced array based rendering. Commiting now as a reference
	  point before starting to butcher.

2003-12-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.cpp: Clean up and optimise 3ds renderer,
	  getting rid of painfull state changes, and C scoping artifacts.

	* visual/Texture.cpp: Report errors with loaded textures.

2003-12-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/widgets.cpp, visual/widgets.h: Purge useless redundant code.

	* visual/GL.h: Switch to using sage for OpenGL extensions.

	* visual/Renderer.cpp, visual/Model.cpp, visual/EntityRenderer.cpp:
	  Stop using compiled_vertex_array, as it doesn't give any performance
	  improvement.

2003-11-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.h, visual/3dsRenderer.cpp: Re-write
	  3ds rendering code, going back to the original sample
	  code.

2003-11-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.cpp, visual/3dsRenderer.h: Get the 3ds renderer
	  working.

	* visual/Cal3dRenderer.h: Load method does not need to be virtual.

	* app/WorldEntity.cpp: Add 3ds section to conf file, and set up
	  renderer factories.

	* visual/TerrainRenderer.cpp: Ensure material settings are reset
	  before drawing terrain.

2003-11-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.h, app/WorldEntity.cpp: Use slightly more efficient
	  and much more flexible lookup mechanism for renderers.

2003-11-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Got test shadow working.

2003-11-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Update copyright dates.

2003-11-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/Vector3D.h: Switch back to Eris, and using Point<3> for POS
	  attribute.

	* app/GameClient.cpp, visual/Renderer.cpp: Switch to using the new
	  WFMath API additions to transform coords between parent/child
	  spaces.

2003-11-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Use slightly cleaner technique to
	  generate triangle strip indeces for terrain. Ensure that
	  the strip direction for shadows matches for drawing shadows.

2003-11-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h, visual/TerrainRenderer.cpp:
	  Add experimental code to draw shadows on terrain surface.

2003-11-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/Vector3D.h: Set up forward declarations, and typedefs
	  for the WFMath types used. Abstract the type used for POS
	  attributes to make this problem easier to resolve.

	* app/GameClient.cpp, app/GameClient.h, app/WorldEntity.cpp,
	  app/WorldEntity.h, visual/3dsRenderer.cpp, visual/3dsRenderer.h,
	  visual/Cal3dRenderer.cpp, visual/Cal3dRenderer.h,
	  visual/EntityRenderer.cpp, visual/EntityRenderer.h,
	  visual/Renderer.cpp, visual/Renderer.h, visual/TerrainRenderer.cpp,
	  visual/TerrainRenderer.h: Use typedes for WFMath types throughout.

	* visual/Sprite.cpp: Add missing iostream include.

	* gui/Gui.cpp, visual/Renderer.cpp: Initialise namePtr to 0
	  to avoid warning.

	* visual/VisualEntity.h: Mark as removed from the build.

2003-11-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp, app/IsoClient.cpp: Check if selected entity
	  is 0, so that we don't crash if I click on the sky.

2003-11-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Add parent to drawEntity()
	  to avoid having to retrieve and independantly convert parent
	  to RenderableEntity, simplifying the code.

2003-11-25  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Cal3dRenderer.cpp, visual/EntityRenderer.cpp,
	  visual/EntityRenderer.h: Add a flag to renderer indicating
	  whether contents, or children should be rendered. Default
	  true, but false in cal3d case.

	* visual/Renderer.cpp: Re-work world rendering loops
	  to use the contents flag, and be a little more efficient.

2003-11-25  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Switch to using Discordia instead of Eris to get round API issues.

	* app/GameClient.cpp, app/GameClient.h, app/WorldEntity.cpp,
	  app/WorldEntity.h, common/Vector3D.h, visual/3dsRenderer.cpp,
	  visual/3dsRenderer.h, visual/Cal3dRenderer.cpp,
	  visual/Cal3dRenderer.h, visual/EntityRenderer.cpp,
	  visual/EntityRenderer.h, visual/Renderer.cpp,
	  visual/Renderer.h, visual/TerrainRenderer.cpp,
	  visual/TerrainRenderer.h: Switch to using Vector3D for
	  POS attribute type, and get rid of all the nasty hacks
	  required to make things work with Point3D as POS.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.h: Add members for storing time, place, and
	  existance of an IG left click.

	* app/IxClient.cpp: Add more complex handler for left clicks,
	  the behavoir of which depends on how long the button is down
	  and whether it moves. Remove checks for events that no
	  longer belong here.

	* app/IxClient.cpp, gui/Gui.cpp, app/IsoClient.cpp: Fix use
	  of SDL_MOUSEBUTTON*. Get rid of excessive stupid checks.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/EntityRenderer.cpp, visual/Sprite.cpp, visual/Renderer.h,
	  visual/Renderer.cpp, visual/EntityRenderer.cpp: Fix include
	  orders, and some compiler warnings.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.h, app/GameClient.cpp: Move duplicated code into
	  a single function.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp, app/apogee.cpp: Remove redundant includes.

	* app/IxClient.cpp, app/IsoClient.cpp: Remove redundant code
	  for adjusting view position, obsolete includes, and add
	  touch functionality to apogee.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h: Store pointer to avatar
	  object so we can use its functionality.

	* app/IxClient.cpp: Use Avatar::touch() to touch object we click
	  on.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Cal3dRenderer.cpp: Tweak global cal3d scale.

	* app/perigee.cpp, app/apogee.cpp, app/IxClient.h,
	  app/IxClient.cpp, app/IsoClient.h, app/Application.h:
	  Generalise mouse look interface, and move the
	  code into the application class.

2003-11-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Disable back face culling as it
	  seems the models are consistant.

2003-11-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Cal3dRenderer.cpp: Use cal3d scale factor.

2003-11-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.cpp: Add support for textures other than cal3d raw
	  format.

2003-11-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.cpp, app/WorldEntity.h: Implement factories
	  for creating renderers.

	* visual/Cal3dRenderer.cpp, visual/Cal3dRenderer.h: Add
	  a load method, which can overide the default model.

2003-11-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/CharSelector.cpp, gui/Gui.cpp, visual/Renderer.h:
	  More header cleanups.

2003-11-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/configuration.h, gui/Button.h, gui/CharSelector.h,
	  gui/Compass.h, gui/Dialogue.h, gui/Item.h,
	  gui/Option.h, gui/Pie.h, gui/TextField.h: Big header cleanup
	  removing support for sigc 1.0, and cutting down on incorrect
	  or obsolete includes.

2003-11-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/configuration.cpp, common/configuration.h,
	  gui/Gui.cpp, gui/Gui.h: Move handling of the skin string
	  into the gui code, and add an accessor for it.

	* gui/Compass.cpp: Load compass graphics based on the config file.

2003-11-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/configuration.h: Fix loadConfig() prototype.

	* common/configuration.cpp: Get compile default config directory.

	* app/apogee.cpp, app/perigee.cpp: Load the new config file.

2003-11-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/configuration.h, common/configuration.cpp:
	  Add configuration loader code using varconf.

2003-11-18  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Rename configure.in to configure.ac, and update contents.

2003-11-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.h: Remove old prefix code.

	* gui/Compass.cpp: Switch compass to load from media dir.

	* visual/DemeterScene.cpp: Switch skybox to load from media dir.

2003-11-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.cpp: Use directory of material file as reference for
	  loading texture.

2003-11-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Cal3dRenderer.cpp, visual/Renderer.cpp: Use common
	  prefix for loading cal3d stuff.

	* visual/Model.cpp: Implement automatic extraction of dir
	  prefix from full path. Texture path, and perhaps animation
	  stuff still needs work.

2003-11-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/system.cpp, common/system.h: Add new function for handling
	  getting the system dependant prefix for the media path.

	* gui/Alert.cpp, gui/Button.cpp, gui/Dialogue.cpp, gui/Item.cpp,
	  gui/Item.h, gui/Option.cpp, gui/TextField.cpp: Start switching
	  thing to using the common prefix for loading media.

2003-10-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp,
	  visual/Isometric.cpp, visual/DemeterScene.cpp: Get rid of exception
	  and recode renderer setup so it can return failure as an error
	  code.

	* app/perigee.cpp, app/apogee.cpp, app/GameClient.cpp: Move
	  code to init() the renderer, and set up the Eris connection
	  into a single place in the GameClient class.

2003-10-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TileMap.h, visual/TileMap.cpp, visual/Tile.h,
	  visual/Tile.cpp, visual/HeightMap.h, visual/HeightMap.cpp:
	  Remove obsolete files from the build

	* visual/Texture.cpp, visual/Sprite.cpp, visual/Renderer.h,
	  visual/Renderer.cpp, visual/Isometric.cpp, visual/DemeterScene.cpp,
	  gui/Gui.h, app/WorldEntity.cpp, app/IsoClient.cpp, app/Client.h,
	  app/Application.h: Minimise use of SDL headers, and modify
	  their inclusion so it works more easily on other platforms.

2003-10-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Fix entity render loop for readability.

2003-09-25  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/HeightMap.cpp: Fix <cassert> header for gcc 3.3.

2003-09-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Update apogee rule to work more sanely.

2003-09-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp: Add fog so that terrain works.

	* visual/DemeterScene.cpp: Cleanup fog constants, and remove
	  redundant glViewport() call.

	* visual/Renderer.h, visual/Renderer.cpp,
	  visual/DemeterScene.h, visual/Isometric.h: Move duplicated
	  code in shapeView() into the base class by making the
	  window name a member variable.

2003-09-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Handle error a little more cleanly.

2003-09-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Free textures once they have been allocated.

2003-09-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Free up everything but the height
	  points of a segment, once we have done building the display
	  list for that segment.

2003-09-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Get rid of stray state
	  change.

2003-09-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Make use of constrainChild() in the
	  selection code too.

2003-09-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h: Expose terrain.

	* app/WorldEntity.h, app/WorldEntity.cpp: Add constrainChild()
	  method to entity classes which adjusts a position to
	  take account of the nature of the entity as a parent. Implement
	  this method to adjust height to the terrain level on terrain
	  entities.

	* app/GameClient.cpp, visual/Renderer.cpp: Make use of
	  constrainChild() to make characters track the terrain, and
	  ensure that the camera tracks the character as it does so.

2003-09-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/GL.h: Improved handling of extensions.

	* visual/TerrainRenderer.cpp: Add placeholder code for using
	  alpha test to get clean edge on texture passes.

2003-09-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Make the fog start much closer, to give
	  a depth to the terrain.

	* visual/TerrainRenderer.cpp: Disable the alpha texture and blending
	  for the first render pass. Document the render code a bit.

2003-09-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Handle blend state slightly differently.

2003-08-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h, visual/TerrainRenderer.cpp: Replace
	  texturing algorithm based on color values to one based
	  on an alpha texture. This code requires two texture units to
	  operate.

2003-08-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h, visual/TerrainRenderer.cpp: Remove
	  obsolete code.

2003-08-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Remove mipmap debugging output.

	* visual/TerrainRenderer.cpp: Add in placer holder multi-texturing
	  code written as part of a failed experiment.

2003-08-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Eliminate non-unit texture transform
	  in favor of using texture coordinate generation with the scale
	  factor implicit. This means we can disable the texture coord
	  array completely.

2003-08-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.h, visual/Texture.cpp: Add support for mipmaps.

	* visual/TerrainRenderer.cpp: Use mipmaps in the terrain renderer
	  for performance and visual effect.

2003-08-29  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Fix the texture coord pointer setup
	  to use 2D texture coords with a stride for performance.

2003-08-29  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Use terrain vertex coords as texture
	  coords, as they are the same.

2003-08-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.h, app/GameClient.cpp,
	  app/IsoClient.cpp, app/IxClient.cpp: Add m_ prefix to
	  member variables, for clarity.

	* app/GameClient.cpp: Call Eris::World::tick() every frame,
	  as required.

2003-08-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Stop using vertex cache as rendering
	  is now cached in a display list. Make use of shader check function
	  to skip render passes which have no effect.

2003-08-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/Vector3D.h: Declare vectors for Point<3> addition.
	  I know this is wrong, but the decision to use Point<3> requires
	  it.

	* visual/TerrainRenderer.h, visual/EntityRenderer.h,
	  visual/EntityRenderer.cpp, visual/Cal3dRenderer.h,
	  visual/Cal3dRenderer.cpp, visual/3dsRenderer.h,
	  visual/3dsRenderer.cpp: Change cam position to
	  a point rather than a vector, and pass it to the select
	  method as well as the render method.

	* visual/Renderer.cpp: Remove sky code, now in perspective
	  renderer. Calculate camera position relative to 
	  each entity being rendered, and pass it to the renderer
	  when rendering or selecting.

	* visual/TerrainRenderer.cpp: Use camera position to select
	  an area of surrounding segments to render.

2003-08-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Remove old tile code from the build.

2003-08-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* common/Vector3D.h: Remove old Vector3D class.

2003-08-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h,
	  visual/Renderer.cpp, visual/Renderer.h:
	  Make sky rendering virtual, and move current code into
	  perspective client only.

	* visual/Isometric.cpp: Fix up lighting a little.

2003-08-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Implement per-segment display lists,
	  bringing rendering performance back up.

2003-08-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Increase viewing distance to test
	  terrain view code.

	* visual/EntityRenderer.h, visual/EntityRenderer.cpp,
	  visual/Cal3dRenderer.h, visual/Cal3dRenderer.cpp,
	  visual/TerrainRenderer.h, visual/TerrainRenderer.cpp,
	  visual/Renderer.cpp: Add additional argument to entity
	  renderer interface giving relative camera position
	  so that rendering decisions can be made based on camera pos.

	* visual/TerrainRenderer.h, visual/TerrainRenderer.cpp: Remove single
	  display list for whole terrain in preparation for display list per
	  segment, and switch renderer to only drawing 2x2 segments around
	  character.

2003-08-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Port codebase to Atlas-C++ 0.5 transitional, and eris 1.2 API.

2003-08-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Color arrays from Mercator are now
	  unsigned byte, not float.

2003-08-08  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h, visual/TerrainRenderer.cpp: Use
	  a display list to accelerate terrain rendering.

2003-08-07  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp, visual/TerrainRenderer.h:
	  Use short for array indexes.

2003-08-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp, visual/TerrainRenderer.h:
	  Move calls to setup for terrain rendering into functions,
	  and only call them once per frame.

	* visual/TerrainRenderer.cpp: Make use of Mercator's vertex
	  cache to avoid rebuilding vertex arrays. Disable 
	  GL_EXT_compiled_vertex_array as it reduces performance.

2003-08-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Turn off depth write in subsequent
	  passes of multi-pass rendering.

2003-07-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Make iterators integers unsigned.

	* app/Editor.h, app/Editor.cpp, app/Client.h, app/Client.cpp:
	  Mark unused code as unused.

	* app/Application.h: Make setup method pure virtual.

2003-07-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Adjust fog and light for better screenies.

	* visual/TerrainRenderer.cpp: Use new GrassShader, and add a snow shader.

2003-07-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Tweak fog to allow better view of terrain.

	* visual/TerrainRenderer.cpp, visual/TerrainRenderer.h:
	  Re-write terrain rendering code to make use of new Mercator
	  shaders.

2003-07-25  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Use wfmath Atlas conversion correctly.

2003-07-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/GL.h: Add conditionals to include OpenGL headers differently
	  on Apple platforms.

	* visual/GLU.h: Include glu.h as above for gl.h.

	* gui/Alert.h, gui/CharSelector.h, gui/Dialogue.h, gui/Gui.h,
	  gui/Option.h, gui/Pie.h, visual/Model.h, visual/Renderer.cpp,
	  visual/Sprite.cpp, visual/TileMap.cpp: Ensure that gl headers are
	  always included using the wrapper headers that sort out the platforms
	  issues and extensions.

	* visual/Model.cpp: Use the cal3d platform independant file loading
	  functions to avoid byte order problems.

	* app/GameClient.cpp: Remove test widgets for now.

	* visual/EntityRenderer.cpp: Put back the bounding boxes.

2003-07-07  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* TerrainRenderer.h, visual/TerrainRenderer.cpp:
	  Add some sea rendering code, based on that intially included
	  in Renderer.cpp.

2003-07-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Remove legacy code and
	  interface that has been moved into the entity renderer classes.

2003-07-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Back off changes to fog mode.

	* visual/Cal3dRenderer.cpp: Set default lod back to full.

2003-06-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/GL.h, visual/Tile.h: Fix the name of the header guards.

2003-06-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp, gui/Gui.cpp, visual/3dsRenderer.cpp,
	  visual/Renderer.cpp, visual/Sprite.cpp, visual/Texture.cpp:
	  Fix some compiler warnings.

	* visual/Tile.cpp, visual/Tile.h: Unify tile source with equator.

	* visual/Renderer.cpp, visual/Model.cpp:
	  Enable back face culling.

	* visual/DemeterScene.cpp: Try some different fog settings.

2003-06-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Makefile.am: Updated to ensure dist and distcheck work.

2003-06-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Update terrain drawing to re-populate
	  invalidated segments.

2003-06-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp: Use normals to light terrain.

2003-06-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.cpp: Disable setting color in cal3d.

	* visual/TerrainRenderer.cpp: Set COLOR_MATERIAL mode so that the
	  multi-pass terrrain renderer works with the lights on.

2003-06-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.cpp, visual/TerrainRenderer.h: Clean
	  up texture use, now we have default.

2003-06-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp, visual/Texture.cpp: Remove some calls which screw up
	  texture lighting.

	* visual/TerrainRenderer.cpp: Set a default normal on the terrain so it
	  shows up.

	* visual/Renderer.cpp: Toggle texture mode between lit and unlit modes.

	* visual/Model.cpp: Don't fiddle with the lighting.

	* visual/DemeterScene.cpp: Get the light setup code in the right
	  place.

2003-06-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Use CLAMP_TO_EDGE for non-wrapping
	  textures.

	* visual/DemeterScene.cpp, app/GameClient.cpp: Make fog look better,
	  and start looking at lighting.

2003-06-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Sprite.cpp, visual/Sprite.h,
	  visual/Texture.cpp, visual/Texture.h: Clean up the texture
	  code, and add in a default texture.

2003-06-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Base full screen
	  resolutions on the list queried using SDL.

2003-06-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.h, visual/Texture.cpp: Add argument to texture loader,
	  to specify that texture should not wrap.

	* visual/Renderer.cpp: Load skybox as non-wrapping textures.

2003-06-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Quick and dirty skybox.

	* visual/Renderer.cpp: Disable clearing the colour buffer.

	* app/GameClient.cpp: Draw the sky.

2003-06-10  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/IsoClient.cpp,
	  app/IxClient.cpp, visual/Renderer.cpp, visual/Renderer.h:
	  Remove old terrain demo code.

	* visual/EntityRenderer.cpp: Temporarily disable debug bbox renderer.

	* visual/Renderer.cpp: Remove demo tree renderer. Re-work fullscreen
	  res calculation, so it picks the next one up, not the next one down.

2003-06-09  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/EntityRenderer.cpp: Only draw an entities bounding box if
	  it has one.

2003-06-09  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp, visual/Renderer.h: Provide code to toggle
	  between window and fullscreen, and provide a clean up function
	  that reverts to window mode.

	* app/Application.cpp, app/Application.h: Clean up the renderer
	  when we quit to avoid messing up the desktop res.

	* visual/Isometric.cpp, visual/DemeterScene.cpp: Modify video
	  initialisation so that it uses fullscreen flag.

	* app/IsoClient.cpp, app/IxClient.cpp: Switch between window and
	  fullscreen on alt-enter.

2003-06-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TerrainRenderer.h, visual/TerrainRenderer.cpp: Fill
	  int rest of code required to handle rendering and selecting
	  terrain.

	* visual/Renderer.cpp: Re-write entity code so it recurses in
	  a more sane way, and draws world using terrain renderer
	  class. Comment out out terrain code.

	* app/WorldEntity.h, app/WorldEntity.cpp, app/GameClient.h
	  app/GameClient.cpp: Ground for changes in the way server handles
	  characters. Add in terrain renderer to factory.

2003-05-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Add virtual destructor for
	  correctness.

	* visual/Renderer.h, visual/Renderer.cpp: Add Update signal so
	  things can subscribe to per-frame time updates. Add function
	  to handle rotation and orientation from a quaternion.

	* visual/Renderer.cpp: Move rendering and selection code over to
	  using entity renderers, which now work. Comment out now unused
	  entity drawing functions.

	* visual/EntityRenderer.h, visual/Cal3dRenderer.cpp,
	  visual/Cal3dRenderer.h: Allow EntityRenderer to subscribe to
	  signals, and subscribe Cal3dRenderer to Update so it can handle
	  animation updates.

2003-05-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp, app/WorldEntity.cpp: Initialise some
	  members, and remove excessive debug output.

2003-05-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/WorldEntity.cpp, app/WorldEntity.h,
	  visual/3dsRenderer.cpp, visual/3dsRenderer.h,
	  visual/Cal3dRenderer.cpp, visual/Cal3dRenderer.h,
	  visual/EntityRenderer.cpp, visual/EntityRenderer.h,
	  visual/TerrainRenderer.cpp, visual/TerrainRenderer.h:
	  Give entity renderers a reference to the core renderer
	  so they can subscribe to update events.

	* visual/Renderer.cpp: Start using entity renderers. Broken.

2003-05-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/3dsRenderer.cpp, visual/3dsRenderer.h,
	  visual/Cal3dRenderer.cpp, visual/Cal3dRenderer.h,
	  visual/TerrainRenderer.cpp, visual/TerrainRenderer.h:
	  Roll out code for rendering entities into a class for each type of
	  model.

2003-05-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp, visual/Isometric.h,
	  visual/Isometric.cpp, visual/DemeterScene.h,
	  visual/DemeterScene.cpp: Simplify the render interface, and clean
	  up camera handling. Avoid explicitly setting OpenGL to its defaults.

2003-05-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Clean up the way drawing
	  works, so positions are handled a bit less weirdly.

	* visual/EntityRenderer.h, visual/EntityRenderer.cpp: Start to
	  add classes that handle rendering for different types of entity.

2003-05-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp, gui/CharSelector.cpp: Disable depth test during gui
	  render, to avoid interfering with game view.

2003-05-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.h, app/GameClient.cpp: Allow creating new accounts
	  if the login dialogue is cancelled.

2003-05-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/EntityRenderer.cpp, visual/EntityRenderer.h:
	  Define interface for classes that can render given
	  types of entity.

	* app/GameClient.cpp, app/GameClient.h, app/WorldEntity.cpp,
	  app/WorldEntity.h, visual/Renderer.cpp: Re-work entity
	  factory so it has different entity classes for different
	  types of entity, so we can drop in new renderers for them,
	  and handle information differently.

2003-05-19  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp, gui/font.h: Put font texture into a header so we no
	  longer need the .png around.

2003-05-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Re-worked terrain renderer to avoid allocating
	  a new vertex array for each segment, and minimalise the
	  initialisation of the arrays for each segment. Re-work the
	  second pass to take more advantage of locked arrays.

2003-05-16  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Add a second pass to the terrain renderer, with
	  a different texture.

2003-05-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Console.cpp, visual/DemeterScene.cpp, visual/Isometric.cpp,
	  visual/Model.cpp, visual/Renderer.cpp, visual/Sprite.cpp,
	  visual/Tile.cpp: Enable vertex arrays globally, so they no longer
	  have to be enabled each time they are used.

2003-05-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Don't refresh the terrain every frame, which
	  was coincedently leaking memory.

2003-05-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h: Get terrain base points from
	  server. 

	* visual/DemeterScene.cpp, visual/Isometric.cpp,
	  gui/Gui.cpp: Enable blending in the right place.

	* visual/Renderer.cpp, visual/Renderer.h: Render a very simple
	  sea.

2003-04-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp: Add support for negative x coord for widgets, placing
	  them relative to the right edge of the screen.

	* app/GameClient.cpp, gui/Console.h, gui/Console.cpp:
	  Add console widget for commands and chat.

2003-04-29  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Clean up checking in game state.

	* app/IsoClient.cpp, app/IxClient.cpp: Clean up left click
	  handling to make propper use of the new selection code.

2003-04-29  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp, visual/Renderer.h: Add function for
	  rendering bboxes as cuboids for selection. Implemnt results
	  for select, and returnt the entity that has been clicked on.

2003-04-29  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp, visual/Isometric.h,
	  visual/Isometric.cpp, visual/DemeterScene.h,
	  visual/DemeterScene.cpp: Break down setting the projection
	  and modelview to ensure that we can set the pick matrix.
	  Fix the selection code.

2003-04-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.h, visual/Model.cpp: Add select code which gets rid of
	  of normal and textures for select mode.

	* visual/Renderer.cpp, visual/Renderer.h: Implement selecting, though
	  interpreting results is not yet there.

	* app/GameClient.cpp: Clean up the way origin is used when rendering
	  the world.

	* app/IsoClient.cpp: Hook in to test the new select code.

2003-04-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Start adding entity selection
	  code.

2003-04-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Default to mouse in gui mode.

2003-04-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp: Remove debug output.

	* visual/Renderer.cpp: Some minor rendering optimisations.

2003-04-07  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/widgets.cpp, visual/widgets.h: Remove obsolete code.

	* visual/Renderer.cpp, visual/Sprite.cpp, visual/Tile.cpp,
	  visual/Tile.h, visual/TileMap.cpp, visual/TileMap.h:
	  Replace discrete vertex calls with vertex arrays.

2003-04-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/Application.h, app/IsoClient.h, app/IxClient.cpp,
	  app/IxClient.h: Return a bool indicating whether the mouse movement
	  should be recentered.

	* app/perigee.cpp: Finally sort out the mouse controlled view
	  correctly.

2003-04-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp, app/perigee.cpp: Update perigee to use the same
	  event model as apogee.

2003-04-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Rework the way events are handled so they only pass to the next layer
	  they have not yet been used. gui first, then game, then wrapper.

2003-04-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Pie.cpp, gui/Pie.h: Add functionality necessary to
	  make menus work.

2003-04-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Pie.cpp, gui/Pie.h: Add clicking on pie menus.

2003-04-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Pie.cpp: Trim parameters to get the menu we need.

2003-04-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Pie.h, gui/Pie.cpp: Add Pie menu widget.

	* app/GameClient.cpp: Add a test Pie menu.

2003-02-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp, visual/Isometric.h,
	  visual/Isometric.cpp, visual/DemeterScene.h, visual/DemeterScene.cpp,
	  app/perigee.cpp, app/apogee.cpp, app/IxClient.h, app/IxClient.cpp,
	  app/IsoClient.h, app/IsoClient.cpp: Clean up old code, and make
	  everything presentable.

2003-02-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp, visual/Isometric.h,
	  visual/Isometric.cpp, visual/DemeterScene.h, visual/DemeterScene.cpp,
	  app/IxClient.h, app/IxClient.cpp, app/IsoClient.h, app/IsoClient.cpp,
	  app/GameClient.h, app/GameClient.cpp: Move common functionality
	  into common files, reducing duplication, and making maintenance
	  easier.

2003-02-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp: Fixed screwed transparency on everything rendered after
	  some text.

2003-02-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp: Modify use of mercator now that segments are
	  easier to render.

2003-02-09  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp: Fix typo in texture handling.

2003-02-08  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp, app/IsoClient.h, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h, visual/Renderer.h:
	  Try out mercator for terrain handling.

2003-02-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Convert to pkgconfig.

2003-01-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/GL.h, visual/Isometric.cpp, app/IsoClient.cpp,
	  visual/Isometric.h, visual/Model.cpp:
	  Detect and make use of GL_EXT_compiled_vertex_array
	  when drawing cal3d meshes.

2003-01-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/IsoClient.cpp, app/IxClient.cpp,
	  app/WorldEntity.cpp, app/apogee.cpp, app/perigee.cpp,
	  gui/CharSelector.h, gui/Dialogue.h, gui/Option.h:
	  Patch code up to compile with sigc++ 1.2.

2003-01-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/Application.h, app/GameClient.cpp, app/IsoClient.h,
	  app/IxClient.cpp, app/IxClient.h, app/WorldEntity.cpp,
	  app/WorldEntity.h, app/apogee.cpp, app/perigee.cpp,
	  visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h,
	  visual/Renderer.cpp, visual/Renderer.h:
	  Re-structure code to fit with the way Eris works now, and
	  get it up and working again.

2002-06-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp: Be a bit less picky about screen depth.

2002-06-06  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Texture.cpp: Add support for BGR textures.

	* app/IsoClient.cpp: Make view calculations a bit more floaty.

	* app/GameClient.cpp: Make a more mason like settler. Still a hack.

	* visual/Isometric.cpp: Implement propper UV mapping of textures
	  from 3ds file.

2002-06-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp: Hack in some dodgey texturing.

2002-06-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.h, visual/Isometric.cpp: Experimental working
	  support for a .3ds file loader using lib3ds.

2002-05-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Dialogue.cpp: Fixed text entry so field selection now works.

2002-04-28  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/IsoClient.cpp, app/IxClient.cpp:
	  Fix up signals and detecting IG transition when taking
	  existing character.

2002-04-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Option.h, gui/Option.cpp: gui widget that allows the user
	  to be asked an either/or question.

	* gui/CharSelector.h, gui/CharSelector.cpp: gui widget that allows
	  the user to pick an existing character.

	* visual/Renderer.h, visual/Isometric.h, visual/DemeterScene.h:
	  Make the temporary model pointer common and public.

	* visual/Isometric.cpp, visual/DemeterScene.cpp, gui/Gui.cpp:
	  Increase the depth available for gui drawing so that models
	  can be added to the gui.

	* visual/DemeterScene.cpp: Clean off viewpoint control code.
	  Remove obsolete cal3d drawing code.

	* gui/Gui.h: Allow widgets access to the renderer.

	* app/GameClient.h, app/GameClient.cpp: Implement code for
	  optionally taking control of existing character using the
	  charselector widget.

2002-04-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp, app/IxClient.h: Add flag used to toggle between
	  mouse used to control view, and mouse used with ui.

	* visual/DemeterScene.cpp: Removed annoying debugging output.

2002-04-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Add code for moving to perigee.

	* visual/DemeterScene.cpp, visual/DemeterScene.h: Make demeter code
	  optional and disable by default. Clean up unnecessary camera code.

2002-04-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Fix event code so keypress events get to
	  the gui.

2002-04-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp, app/IxClient.cpp, app/apogee.cpp,
	  visual/Isometric.cpp, visual/Renderer.cpp,
	  visual/DemeterScene.cpp, visual/DemeterScene.h:
	  ISO C++ fixes.

	* gui/Gui.cpp: Remove experimental pui code.

	* visual/DemeterScene.cpp, visual/DemeterScene.h: Add features
	  bringing perspective client into line with isometric.

2002-04-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp, app/IsoClient.h, app/IxClient.cpp,
	  app/IxClient.h, visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h, visual/Renderer.cpp,
	  visual/Renderer.h, visual/TileMap.cpp, visual/TileMap.h:
	  Catch up with latest devel coal.

	* app/IsoClient.cpp, app/IxClient.cpp, app/IxClient.h,
	  visual/Isometric.cpp: Remove old obsolete code, and remove
	  unnecessary differences between the two clients.

	* gui/Gui.cpp: Experiment with plib ui code.

	* visual/HeightMap.cpp, visual/HeightMap.h: Switch to using libpng
	  for heightmap data loading.

	* visual/Isometric.cpp: Re-write rotation matrix code to use wfmath
	  types instead of Eris types.

2002-04-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp, app/apogee.cpp: Updated for latest eris
	  poll API.

2002-04-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Removed the rather weird camera code
	  that got dropped in with the demeter example code. Cleaned up
	  box rendering so it gets rid of unnecessary begin/end pairs.
	  Demeter map is now rendered directly under tile version of same
	  map.

2002-04-10  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.h, app/apogee.cpp:
	  Bring up to date with changes to eris loggin API.

2002-04-09  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp, app/IxClient.h: Add flags for controlling
	  terrain rendering, controlled by user.

	* visual/DemeterScene.cpp, visual/DemeterScene.h: Switch to using
	  moraf map in the Demeter renderer. Remove some cruft.

2002-04-08  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Isometric.h, visual/Isometric.cpp,
	  app/IsoClient.cpp, app/IsoClient.h: Remove cruft, and switch
	  to moraf.

	* visual/DemeterScene.cpp, app/IxClient.cpp, app/IxClient.h:
	  Added use of tilemaps to perspective version of client. Removed
	  isoclient view control code that got into here by mistake. 

	* gui/Alert.cpp, gui/Button.cpp, gui/Dialogue.cpp, gui/TextField.cpp:
	  Switch to new ui graphics for copyright reasons.

	* visual/DemeterScene.cpp, visual/DemeterScene.h: Tweak for latest
	  demeter API, and remove obsolete code.

	* visual/TileMap.cpp, visual/TileMap.h: Move tilemap rendering and
	  compiling into module dor use in multiple places.

2002-03-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* ./visual/Renderer.h, ./app/IsoClient.cpp, ./app/IxClient.cpp:
	  Switch to using floats for view control to make camera control
	  smoother.

2002-03-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Isometric.h, visual/Isometric.cpp,
	  visual/DemeterScene.h, visual/DemeterScene.cpp, app/IxClient.cpp:
	  Cleaned up more of the builtin/Eris types in favour of the
	  wfmath versions.

2002-03-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/IsoClient.cpp,
	  app/IxClient.cpp, app/WorldEntity.cpp, app/WorldEntity.h,
	  common/Vector3D.h, visual/DemeterScene.cpp,
	  visual/DemeterScene.h, visual/Isometric.cpp,
	  visual/Isometric.h, visual/Renderer.cpp,
	  visual/Renderer.h: Switch to using wfmath types for vectors
	  and coordinates, so that conversion is no longer necessary
	  between libraries and the application.

	* gui/Gui.cpp: Remove inventory graphic cos its confusing.

	* visual/HeightMap.cpp, visual/HeightMap.h: Start work on libpng
	  based heightmap loader for 16bit support.

2002-02-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/HeightMap.cpp: Make heightmap signed.

	* visual/Sprite.cpp: Use more optimal algorithm for calculating the
	  best fit texture size.

	* visual/Tile.cpp: Fix to triangle strip tile rendering.

2002-02-22  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Tile.cpp, visual/Tile.h:
	  Added code to draw height mapped version of tile.

	* visual/Renderer.h, visual/Isometric.h, visual/Isometric.cpp:
	  Removed some clutter from the renderer interface, and some
	  redundant code from the implementation. Added z offset for
	  view.

	* visual/HeightMap.h, visual/HeightMap.cpp:
	  Make it possible to query heightpoints from a const heightmap.

	* visual/DemeterScene.cpp, app/perigee.cpp, app/IxClient.h,
	  app/IxClient.cpp:
	  Added required update() method, to update animations.

2002-02-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Isometric.h, visual/Isometric.cpp,
	  visual/DemeterScene.h, app/apogee.cpp, app/IsoClient.h,
	  app/IsoClient.cpp, app/Application.h:
	  Added mechanism for time to be passed around subsystems, to
	  be used to update animations etc. Implemented measuring time
	  using SDL, and used it to animate cal3d models more correctly.

2002-02-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/TileMap.h, visual/TileMap.cpp,
	  visual/HeightMap.h, visual/HeightMap.cpp:
	  TileMap and HeightMap classes added for more efficiently managing
	  maps of tile, and height data.

	* app/GameClient.cpp, app/IsoClient.h: Add a height map to the
	  test app.

	* visual/DemeterScene.cpp, visual/DemeterScene.h, visual/Isometric.cpp,
	  visual/Isometric.h, visual/Renderer.h:
	  Add support for height map to renderer interface.

	* visual/Tile.cpp: Tweak debugging output.

	* visual/Isometric.cpp, visual/Isometric.h: Implement conversion
	  of coal stored map into more efficient tile map, and render only
	  small area surrounding player.

2002-01-07  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.h: Updates for cal3d 0.7

2002-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Strict gcc3 C++ compliance fixes.

2002-01-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/WorldEntity.cpp,
	  app/WorldEntity.h: Updated for latest Eris API.

2001-12-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Tile.h, visual/Tile.cpp:
	  Add class to handle isometric tiles as GL textures.

	* app/IsoClient.cpp, app/IsoClient.h, visual/Isometric.cpp:
	  Add isomap rendering code, and switch to using it by default.

2001-12-15  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Slow down character movement to walking pace.

	* app/IxClient.cpp, visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h, visual/Renderer.h:
	  Add support for rotation quaternion to model drawing function.

	* visual/Isometric.cpp: Remove deugging output.

	* common/Vector3D.h: Fixed error in cross product calculation.

	* visual/Model.cpp: Disable linear texture for speed on software
	  rendering.

2001-12-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.h, visual/Isometric.cpp, visual/Isometric.h:
	  Fix movement prediction so it works in fracitons of a second.

	* app/GameClient.cpp, app/GameClient.h: Add movement prediction to
	  the camera control.

	* visual/Isometric.cpp, visual/DemeterScene.cpp: Fix up media
	  pathnames.

2001-12-11  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/WorldEntity.cpp, app/WorldEntity.h: Added code to manage a
	  movement time stamp.

	* visual/Isometric.cpp, visual/Isometric.h: Added very simple movement
	  prediction, extrapolating from time of last update from server.

2001-12-10  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp: Properrly fixed button press detection.

	* visual/Isometric.cpp, visual/Isometric.h: Added test of Eris
	  typeinfo system, checking if each entity inherits from character,
	  and if so, using a character animation rather than a bbox.

2001-12-04  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Brought perigee up to date with the bbox format

	* app/IsoClient.cpp: Cleaned up button click processing.

	* app/apogee.cpp: Make view update continuously.

	* visual/Isometric.cpp: Cut down the excess debugging output, and
	  add SDL timer support for the refresh delay.

2001-12-03  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h:
	  Added support for moving the character, and getting the
	  coords of the character relative to the current top level entity.

	* app/IsoClient.cpp, app/IsoClient.h:
	  Remove support for models. Set renderer offset according to
	  character position. Move character to position when user clicks
	  on terrain.

	* gui/Gui.cpp: Correct initialisation of modelview, and move
	  gui closer to the user.

	* visual/DemeterScene.cpp, visual/DemeterScene.h,
	  visual/Isometric.cpp, visual/Isometric.h, visual/Renderer.cpp,
	  visual/Renderer.h: Switch to using new Eris bouding box, and use
	  depth buffer when drawing Isometric terrain, so that coords of
	  click point can be found.

2001-11-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/IxClient.cpp, visual/Isometric.cpp:
	  Fixes for modified Eris API.

2001-11-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/apogee.cpp,
	  app/perigee.cpp: Updated to handle latest Eris logging features.

2001-11-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp: Updated account creation for new Eris API.

2001-11-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h: Added new local Entity class
	  which inherits from Eris::Entity, and tell Eris to use it.

	* app/IsoClient.cpp: Remove old gui widgets, which are not clienty.

	* app/IsoClient.cpp: Switch to rendering world in the renderer
	  instead of in the app.

	* common/Vector3D.h: Add more operators.

	* visual/Renderer.h, visual/DemeterScene.h, visual/Isometric.h,
	  visual/Isometric.cpp:
	  Add code to render hierarchy of Atlas entities as the world.

	* visual/Isometric.cpp: Fix scaling code so it now uses propper
	  OpenGL scale function.

2001-10-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/GameClient.cpp, app/GameClient.h, app/IsoClient.cpp:
	  Turn on Eris logging, and add a flag which is set when
	  we get the Entered signal.

2001-10-02  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Alert.cpp, gui/Alert.h, gui/Button.cpp, gui/Button.h,
	  gui/Compass.cpp, gui/Compass.h, gui/Dialogue.cpp, gui/Dialogue.h,
	  gui/Gui.cpp, gui/Gui.h, gui/Item.cpp, gui/Item.h,
	  gui/TextField.cpp, gui/TextField.h, Widget.h:
	  Modified key() method so it takes mod info as well as key pressed.
	  Added variables to track which widget has focus. Added static
	  method to convert SDL keypress info to ascii value. Implemented
	  text editing in TextField and Dialogue.

2001-10-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* configure.in: Patched in correct sigc++ check by James.

2001-10-01  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Compass.h, gui/Compass.cpp: Added compass gui widget.

	* gui/Button.h, gui/Button.cpp: Fixed accidentally overloaded
	  release() method.

	* app/IsoClient.h, app/IsoClient.cpp: Added compass widget to
	  IsoClient gui.

	* app/GameClient.cpp: Added alert boxes for connection error
	  conditions.

	* Added copyright messages to all files.

2001-09-30  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Isometric.cpp, visual/DemeterScene.cpp: Switched depth
	  function to LEQUAL for gui text.

	* visual/DemeterScene.cpp: Corrected value of pi. Thanks anubis.

	* gui/Widget.h, gui/Widget.cpp, gui/Item.h, gui/Item.cpp: Added
	  release() method to widget for when the mouse click is released,
	  and key() for keypresses.  Added virtual destructor to base class.

	* gui/Gui.h, gui/Gui.cpp: Added addWidget() so application class
	  can use the gui. Added handling of keypresses and passing them
	  to widgets. Modified semantics of click() and added release()
	  when dealing with button clicks. Removed the test Widgets.

	* gui/Button.h, gui/Button.cpp: Added press() and release() methods
	  to switch between normal graphic and pressed graphic. Added width()
	  method to query the pixel width.

	* gui/Alert.h, gui/Alert.cpp: Modified so it no longer inherits from
	  Item, and move graphic handling to a static member so the
	  background graphic is only loaded once.

	* gui/Dialogue.h, gui/Dialogue.cpp: New simple dialogue with two
	  buttons, and up to two textfields.

	* gui/TextField.h, gui/TextField.cpp: New textfield widget used
	  by dialogue for entering text. Currently non-interactive.

	* app/perigee.cpp, app/apogee.cpp: Removed the need for arguments.

	* app/GameClient.h, app/GameClient.cpp: Added common base class for
	  all clients which are used for playing games. Implements logging
	  on and some IG and OOG server interaction. Removed all the common
	  functionality from IsoClient and IxClient and placed in this
	  class. Add features to use gui Dialogue to get player interaction
	  during logon.

	* app/Application.h, app/Application.cpp: Moved connection handling
	  into the application base class.

	* app/IxClient.cpp, app/IsoClient.cpp: Add server connection dialogue
	  to gui on startup.

2001-09-27  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Button.cpp, gui/Button.h: Added new button widget.

	* gui/Widget.h, gui/Widget.cpp: Added obsolete and visible flags
	  so widgets can be hidden or removed. Make move function virtual.
	  Added click virtual method to transmit mouse clicks to widgets.

	* gui/Item.h, gui/Item.cpp: Implemented click() to do nothing.

	* gui/Gui.h: Added list for storing select hits, and accessor methods.

	* gui/Gui.cpp: Made sure print() does not mess up the cursor position.
	  Added handling of mouse release. Store all select hits in the hit
	  list. Implement hiding of non-visible widgets, and removal of
	  obsolete widgets. Make sure all widgets are setup() correctly.

	* gui/Alert.h, gui/Alert.cpp: Implement click to close the alert
	  when the button is pressed. Re-write select so it only draws the
	  important visual elements. Fully implement drawing of a propper
	  alert.

	* visual/DemeterScene.cpp: Set blend function correctly.

2001-09-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Alert.h, gui/Alert.cpp: New gui class for popup or alert
	  messages.

	* gui/Gui.cpp: Implemented print function for text in OpenGL.

	* gui/Gui.h: Made newName() public so that Widgets can get names
	  for their subwidgets.

	* gui/Widget.h: Made reference to gui object protected.

	* visual/Isometric.cpp: Set blend function, as text code in gui
	  needs a different one.

2001-09-24  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IsoClient.cpp, app/IxClient.cpp, gui/Gui.cpp, gui/Gui.h,
	  gui/Item.cpp, gui/Item.h: Place control over rendering gui
	  directly with the Gui class. Add widget map, which indexes
	  using OpenGL names, and fix passing events through to gui
	  code.

	* gui/Widget.h: Modified passing of Gui reference so it is stored
	  at initialisation. Add code for moving widget.

	* visual/DemeterScene.cpp, visual/Isometric.cpp: Removed old test
	  gui code.

	* gui/Gui.cpp: Added text drawing code. Added handling of mouse
	  drag events to move widgets around.

2001-09-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.cpp, gui/Gui.h, gui/Widget.cpp, gui/Widget.h, gui/Item.cpp,
	  gui/Item.h: Make propper classes for gui, and implement bag item.

2001-09-21  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.cpp: Switched perigee to using Gui class.

	* visual/DemeterScene.cpp: Enable blending for gui textures.
	  Temporarily turn off grabbing mouse cursor for debugging.

	* gui/Gui.cpp: Removed unrequired call to set up OpenGL names.

2001-09-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/IxClient.h, app/IxClient.cpp, app/perigee.cpp:
	  Created new Client application class for perspective client.

	* app/perigee.cpp, app/IxClient.cpp: Moved handling of mouse
	  movement into an application method.

2001-09-20  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp, visual/DemeterScene.cpp: Grab mouse cursor, and
	  make mouse control view directly.

2001-09-19  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* gui/Gui.h, gui/Gui.cpp, app/Application.h, app/IsoClient.cpp,
	  app/IsoClient.h, visual/Isometric.cpp: Added gui class for
	  handling opengl user interface code.

2001-09-18  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/perigee.cpp: Renamed perspective version of the client perigee,
	  and create new build target for it.

	* app/IsoClient.h, app/IsoClient.cpp: Added new application class for
	  the isometric version of the client.

	* app/Editor.cpp: This is now the application class for perigee, the
	  perspective version of the client.

	* app/apogee.cpp: Switched back to isometric renderer, and moved
	  to using the new IsoClient application class.

	* visual/DemeterScene.cpp: Window title should be perigee for
	  perspective renderer.

	* visual/Isometric.cpp: Disabled smooth shading for performance while
	  developing. Added drawGui() method for isometric renderer, similar
	  to that for perspective.

	* visual/Sprite.cpp: Fixed sprite loading code, and adapted it so
	  it can be used for gui sprites as well as in game ones.

	* visual/Texture.cpp: Removed deliberate corruption of textures for
	  testing.

2001-09-17  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.cpp: Removed old code from renderer base class.

	* visual/Renderer.h, visual/Isometric.h, visual/DemeterScene.h:
	  Added drawGui() pure virtual function.

	* visual/Model.cpp: Removed code which fiddles with the depth test,
	  as this is now controlled by the renderer class.

	* visual/DemeterScene.cpp: Added code to draw experimental gui
	  graphics. Added lighting setup code. Modified projection code
	  so the window can be resized. scale is tied to the windows
	  height.

	* app/Editor.cpp: Removed old calls to isometric related functions.

2001-09-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.cpp, visual/Model.h: Updated to latest versions from
	  the cally demo 2 to use cal3d 0.6.

	* app/Editor.cpp: Updated to latest demo data for cal3d.

2001-09-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/DemeterScene.cpp: Fixed cal3d model rendering so it is
	  drawn at the terrains surface.

2001-09-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Fixed camera to track terrains surface.

2001-09-12  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* app/Editor.cpp, visual/DemeterScene.cpp: Worked out how to scale
	  cally character rendering.

	* visual/DemeterScene.cpp, visual/DemeterScene.h: Added z_offset, and
	  sorted out correctly positioning character and map using the same
	  camera offsets.

2001-09-10  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Added new rendere class which renders a perspective projection,
	  and terrain using demeter.

	* Switched to using float instead of double to make GL code more
	  efficient.

2001-08-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Renderer.h, visual/Renderer.cpp: Moved Vector3D into
	  common.

	* app/apogee.cpp, app/Editor.h, app/Editor.cpp, app/Client.h,
	  app/Application.h: Re-wrote client and entity code to use
	  Eris, the newly commited client library.

2001-07-26  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* visual/Model.h, visual/Model.cpp: Added model class from cal3d
	  demo app.

	* visual/Renderer.h, visual/Renderer.cpp, app/Editor.h, app/Editor.cpp:
	  Added code to draw an animated paladin model on the main view
	  using cal3d.

2001-07-23  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* net/Connection.h, net/Connection.cpp: Added Atlas connection
	  class, which connects to server and handles operations from
	  server.

	* world/World.h, world/World.cpp, world/Entity.h, world/Entity.cpp,
	  world/Vector3D.h: Added classes to store the state of the world.

	* Added support using new code for full connecting to the server,
	  and rendering server side entities as boxes.

	* Cleaned up and ISO'd the code.

2001-02-05  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Started work on the client side of apogee, and looked at
	  getting isometric loader from coal working.

2001-01-18  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* configure.in, autogen.sh: Switched to using atlas.m4 for detecting
	  Atlas, and using correct libxml macro.

2001-01-14  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Added ability to scroll round the map.

	* Added beginnings of lighting support, which does not yet
	  work it seems.

2001-01-13  Al Riddoch  <ajr@ecs.soton.ac.uk>

	* Fixed alpha blending in sprite code.

	* Added reset isometric projection key 0.
